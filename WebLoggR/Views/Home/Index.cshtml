@*<div class="row-fluid">
    <div class="span12">
        <div class="pull-right">
            <button class="btn">Log In</button>
            <a class="btn" href="@Url.Action("SignUp", "Home")">Sign Up</a>
            <span class="btn disabled" data-bind="text: stateText, css: stateCSS"></span>
        </div>
    </div>
</div>*@
<h3>Logging</h3>
@*<div class="row-fluid">
    <div class="span6">
        <div class="row-fluid">
            <div class="span12">
                <select data-bind="value: logLevel">
                    <option value="success">Success</option>
                    <option value="log">Log</option>
                    <option value="warn">Warn</option>
                    <option value="critical">Critical</option>
                </select>
                <select data-bind="options: applications, optionsText: 'name', optionsValue: 'apiKey', value: apiKey">
                </select>
                <button class="btn btn-primary" data-bind="click: logIt">Send</button>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span12">
                <input type="text" class="input-block-level" data-bind="value: title" placeholder="Title..." />
                <textarea class="input-block-level" data-bind="value: message" placeholder="Exception..."></textarea>
            </div>
        </div>
    </div>
</div>*@
<div class="row-fluid">
    <div class="span12">

        <div id="tabs">
            <ul data-bind="foreach: applications">
                <li><a data-bind="attr: { href : '#' + id() }, text: name"></a></li>
            </ul>
            <!-- ko foreach: applications -->
            <div data-bind="attr: { id: id }">
                <!-- ko if: messages().length == 0 --> 
                    <div><p>No Recent Messages!</p></div>
                <!-- /ko --> 
                <!-- ko foreach: messages -->
                <div class="well well-small">
                    <div class="row-fluid">
                        <div class="span6">
                            <span class="label" data-bind="text: title, css: typeCSS"></span>
                        </div>
                        <div class="span6">
                            <span class="input-block-level" data-bind="text: time"></span>
                        </div>
                    </div>
                    <div class="row-fluid">
                        <div class="span12">
                            <p data-bind="text:message"></p>
                        </div>
                    </div>
                </div>
                <!-- /ko -->
            </div>
            <!-- /ko -->
        </div>
    </div>
</div>
<script src="~/Scripts/_references.js"></script>
<script src="~/Scripts/models.js"></script>
<script>
    function viewModel() {
        var self = this;

        self.logLevel = ko.observable("log");
        self.message = ko.observable();
        self.title = ko.observable();
        self.apiKey = ko.observable();

        self.hub = $.connection.greenRHub;
        self.stateCSS = ko.observable();
        self.stateText = ko.observable();

        self.applications = ko.observableArray();

        self.hub.client.addApplication = function (apps) {
            console.log(apps);
            ko.utils.arrayForEach(apps, function (app) {
                self.applications.push(new application(app.Name, app.ID, app.ApiKey));
            });
            $("#tabs").tabs();
        }

        self.hub.client.log = function (data) {

            var app = ko.utils.arrayFirst(self.applications(), function (app) {
                console.log("app.apiKey(): " + app.apiKey());
                console.log("data.apiKey: " + data.apiKey);
                return app.apiKey() == data.ApiKey;
            });

            console.log(data);
            app.messages.push(new message(data.Title, data.Message, data.LogLevel, data.Time));

            console.log(app.messages());
        };
        $.connection.hub.start().done(function () {
            self.hub.server.joinGroup("@ViewBag.AccountId.ToString()");
            });

            self.logIt = function () {
                self.hub.server.serverLog(self.apiKey(), self.logLevel(), self.title(), self.message());
            };

            self.hub.connection.stateChanged(function (change) {
                if (change.newState === $.signalR.connectionState.reconnecting) {
                    self.stateCSS("btn-warning");
                    self.stateText("Reconnecting...");
                }
                else if (change.newState === $.signalR.connectionState.connected) {
                    self.stateCSS("btn-success");
                    self.stateText("Connected");
                }
                else if (change.newState === $.signalR.connectionState.disconnected) {
                    self.stateCSS("btn-inverse");
                    self.stateText("Disconnected");
                }
            });
        }

        ko.applyBindings(new viewModel());

</script>
